generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id    Int     @id @default(autoincrement())
    email String  @unique
    name  String?
    awsId String  @unique

    // Role: to distinguish between customer and admin
    role Role @default(CUSTOMER)

    // Messages sent by this user
    sentMessages     Message[] @relation("SentMessages")
    // Messages received by this user
    receivedMessages Message[] @relation("ReceivedMessages")

    // Conversations this user is part of
    conversations Conversation[] @relation("UserConversations")
}

model Message {
    id        Int      @id @default(autoincrement())
    content   String?
    timestamp DateTime @default(now())

    // The sender of the message
    senderId String
    sender   User   @relation("SentMessages", fields: [senderId], references: [awsId])

    // The recipient of the message
    recipientId String
    recipient   User   @relation("ReceivedMessages", fields: [recipientId], references: [awsId])

    // The conversation this message belongs to
    conversationId Int
    conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model Conversation {
    id    Int     @id @default(autoincrement())
    title String?

    // The user (customer or admin) associated with this conversation
    userId String
    user   User   @relation("UserConversations", fields: [userId], references: [awsId])

    // Messages in this conversation
    messages Message[]
}

enum Role {
    CUSTOMER
    ADMIN
}
